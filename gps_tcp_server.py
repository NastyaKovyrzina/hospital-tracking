import socketserver
import requests

class GPSHandler(socketserver.BaseRequestHandler):
    def handle(self):
        raw_data = self.request.recv(1024).strip()
        print(f"–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ: {raw_data}")

        # üîß –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø–∞—Ä—Å–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏–∑ raw_data
        # –ü–æ–∫–∞ —Å–¥–µ–ª–∞–µ–º –∑–∞–≥–ª—É—à–∫—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Flask
        device_id = "gf22-test"
        lat = 47.8253
        lon = 16.5137

        try:
            # –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤–æ Flask API
            response = requests.post("http://localhost:5000/api/position", json={
                "device_id": device_id,
                "lat": lat,
                "lon": lon
            })
            print(f"–û—Ç–≤–µ—Ç Flask API: {response.status_code} {response.text}")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Flask: {e}")

if __name__ == "__main__":
    HOST, PORT = "0.0.0.0", 9000
    print(f"TCP-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ {HOST}:{PORT}")
    with socketserver.TCPServer((HOST, PORT), GPSHandler) as server:
        server.serve_forever()
